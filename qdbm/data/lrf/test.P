
:- import for/3 from basics.

testOldWay() :-
	walltime(LT0),
	load_dyn('upper1000000_pattern(i,i)_xsb'),
	walltime(LT1),
	walltime(CT0),
	((p(_,_), fail) ; true),
	walltime(CT1),
	LT is LT1 - LT0,
	CT is CT1 - CT0,
	write('Loading Time: '), writeln(LT),
	write('Computing Time: '), writeln(CT).

oldWayRange() :-
	walltime(LT0),
	load_dyn('upper1000000_pattern(i,i)_xsb'),
	walltime(LT1),
	walltime(CT0),
	(
		(
			for(X, 10000, 40000), p(X,_Y), 
			%% write(X), write(', '), writeln(_Y), 
			fail
		) 
		; true
	),
	walltime(CT1),
	LT is LT1 - LT0,
	CT is CT1 - CT0,
	write('Loading Time: '), writeln(LT),
	write('Computing Time: '), writeln(CT).



?- ['../../bt'], ['../../bt_p'].

buildPTree() :-
	walltime(LT0),
	load_dyn('upper1000000_pattern(i,i)_xsb'),
	walltime(LT1),
	walltime(BT0),
	btinit(p/2,1,Handle),
	buildPTree_Helper(Handle),
	btclose(Handle),
	walltime(BT1),
	LT is LT1 - LT0,
	BT is BT1 - BT0,
	write('Loading Time: '), writeln(LT),
	write('Building Time: '), writeln(BT).

buildPTree_Helper(Handle) :-
	(
		p(X,Y),
		btinsert(Handle, p(X,Y)),
		fail
	) ; true.


queryAllPTree() :-
	walltime(L0),
	btinit(p/2,1,Handle),
	walltime(L1),
	walltime(C0),	
	queryAllPTree_Helper(Handle),
	walltime(C1),
	C is C1 - C0,
	L is L1 - L0,
	write('Loading Time: '), writeln(L),
	write('Computing Time: '), writeln(C).

queryAllPTree_Helper(Handle) :-
	( 
		btgetall(Handle, _Value), 
		%%writeln(_Value), 
		fail 
	) ; true.


bptreerange() :- 
	walltime(LT0),
	btinit(p/2,1,Handle),
	walltime(LT1),
	walltime(CT0),
	(
		(
			btrange(Handle, 10000, 40000, _), fail 
		) ; true
	),
	walltime(CT1),
	LT is LT1 - LT0,
	CT is CT1 - CT0,
	write('Loading time: '), writeln(LT),
	write('Computing Time: '), writeln(CT).




