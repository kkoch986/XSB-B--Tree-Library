# Makefile.in generated by automake 1.11.5 from Makefile.am.
# tests/rdfa/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# -*- Mode: Makefile -*-
#
# Makefile.am - automake file for Raptor RDFa 1.0 tests
#
# Copyright (C) 2008-2012, David Beckett http://purl.org/net/dajobe/
# 
# This package is Free Software and part of Redland http://librdf.org/
# 
# It is licensed under the following three licenses as alternatives:
#   1. GNU Lesser General Public License (LGPL) V2.1 or any newer version
#   2. GNU General Public License (GPL) V2 or any newer version
#   3. Apache License, V2.0 or any newer version
# 
# You may not use this file except in compliance with at least one of
# the above three licenses.
# 
# See LICENSE.html or LICENSE.txt at the top of this package for the
# complete terms and further detail along with the license texts for
# the licenses in COPYING.LIB, COPYING and LICENSE-2.0.txt respectively.
# 
# 

am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/raptor2
pkgincludedir = $(includedir)/raptor2
pkglibdir = $(libdir)/raptor2
pkglibexecdir = $(libexecdir)/raptor2
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin10.8.0
host_triplet = x86_64-apple-darwin10.8.0
subdir = tests/rdfa
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/raptor_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/kenkoch/research/qdbm/data/btc/raptor2/build/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /Users/kenkoch/research/qdbm/data/btc/raptor2/build/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/kenkoch/research/qdbm/data/btc/raptor2/build/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/kenkoch/research/qdbm/data/btc/raptor2/build/missing --run automake-1.11
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -DRAPTOR_INTERNAL=1 -I/opt/local/include/libxml2 -I/opt/local/include/libxml2  
CURL_CONFIG = curl-config
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
GTKDOC_CHECK = 
GTKDOC_DEPS_CFLAGS = 
GTKDOC_DEPS_LIBS = 
GTKDOC_MKPDF = 
GTKDOC_REBASE = true
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/libexec/gcc/i686-apple-darwin10/4.2.1/ld
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS =  ${LIBOBJDIR}raptor_www_curl$U.o
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}raptor_www_curl$U.lo
MAINT = #
MAKEINFO = ${SHELL} /Users/kenkoch/research/qdbm/data/btc/raptor2/build/missing --run makeinfo
MANIFEST_TOOL = :
MEM = 
MEM_LIBS = 
MKDIR_P = ../../build/install-sh -c -d
NM = /usr/bin/nm
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = raptor2
PACKAGE_BUGREPORT = http://bugs.librdf.org/
PACKAGE_NAME = Raptor RDF Parser and Serializer library
PACKAGE_STRING = Raptor RDF Parser and Serializer library 2.0.8
PACKAGE_TARNAME = raptor2
PACKAGE_URL = 
PACKAGE_VERSION = 2.0.8
PATH_SEPARATOR = :
PERL = perl
PKG_CONFIG = /opt/local/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
RAPTOR_LDFLAGS =  -lcurl -L/opt/local/lib -lxml2 -lz -lpthread -liconv -lm -lxslt -lxml2 -lz -lpthread -licucore -lm
RAPTOR_LIBTOOLLIBS = libraptor2.la
RAPTOR_LIBTOOL_VERSION = 0:0:0
RAPTOR_PARSERS =  rdfxml ntriples turtle trig guess rss-tag-soup rdfa nquads grddl
RAPTOR_SERIALIZERS =  rdfxml rdfxml-abbrev turtle ntriples rss-1.0 dot html json atom nquads
RAPTOR_VERSION = 
RAPTOR_VERSION_DECIMAL = 20008
RAPTOR_VERSION_MAJOR = 2
RAPTOR_VERSION_MINOR = 0
RAPTOR_VERSION_RELEASE = 8
RAPTOR_WWW_LIBRARY = libcurl
RAPTOR_XML_PARSER = libxml
RECHO = echo
RECHO_C = \c
RECHO_N = 
RPM_RELEASE = SNAP
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TAR = gnutar
VERSION = 2.0.8
XML_CONFIG = xml2-config
XSLT_CONFIG = xslt-config
YACC = bison -y
YFLAGS = 
abs_builddir = /Users/kenkoch/research/qdbm/data/btc/raptor2/tests/rdfa
abs_srcdir = /Users/kenkoch/research/qdbm/data/btc/raptor2/tests/rdfa
abs_top_builddir = /Users/kenkoch/research/qdbm/data/btc/raptor2
abs_top_srcdir = /Users/kenkoch/research/qdbm/data/btc/raptor2
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin10.8.0
build_alias = 
build_cpu = x86_64
build_os = darwin10.8.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin10.8.0
host_alias = 
host_cpu = x86_64
host_os = darwin10.8.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/kenkoch/research/qdbm/data/btc/raptor2/build/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/build/install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
BASE_URI = http://rdfa.info/test-suite/test-cases/xhtml1/rdfa1.0/
#
# Manifest:
# https://raw.github.com/rdfa/rdfa-website/master/manifest.ttl
# defines whether sparql ASK should return true or false for success
#
# Query to return all RDFA 1.0 test URIs:
#
# roqet -r csv -D https://raw.github.com/rdfa/rdfa-website/master/manifest.ttl -e 'select ?t where {?t <http://rdfa.info/vocabs/rdfa-test#rdfaVersion> "rdfa1.0"}'
#
# Query to return RDFa 1.0 tests that must return False:
# roqet -r csv -D https://raw.github.com/rdfa/rdfa-website/master/manifest.ttl -e 'select * where {?s <http://www.w3.org/2006/03/test-description#expectedResults> false; <http://rdfa.info/vocabs/rdfa-test#rdfaVersion> "rdfa1.0"}'
#
# http://rdfa.info/test-suite/test-cases/0042
# http://rdfa.info/test-suite/test-cases/0107
# http://rdfa.info/test-suite/test-cases/0122
# http://rdfa.info/test-suite/test-cases/0140
# http://rdfa.info/test-suite/test-cases/0209
# http://rdfa.info/test-suite/test-cases/0211
# http://rdfa.info/test-suite/test-cases/0258
# http://rdfa.info/test-suite/test-cases/0294
#
# These all expect 0 ntriples - failure is >0 triples or ERROR
CLEANFILES = \
*-res.nt

TEST_FILES = \
0001.xml 0006.xml 0007.xml 0008.xml 0009.xml 0010.xml 0012.xml \
0013.xml 0014.xml 0015.xml 0017.xml 0018.xml 0019.xml 0020.xml \
0021.xml 0023.xml 0025.xml 0026.xml 0027.xml 0029.xml 0030.xml \
0031.xml 0032.xml 0033.xml 0034.xml 0035.xml 0036.xml 0037.xml \
0038.xml 0039.xml 0040.xml 0041.xml 0042.xml 0046.xml 0047.xml \
0048.xml 0049.xml 0050.xml 0051.xml 0052.xml 0053.xml 0054.xml \
0055.xml 0056.xml 0057.xml 0058.xml 0059.xml 0060.xml 0061.xml \
0062.xml 0063.xml 0064.xml 0065.xml 0066.xml 0067.xml 0068.xml \
0069.xml 0070.xml 0071.xml 0072.xml 0073.xml 0074.xml 0075.xml \
0076.xml 0077.xml 0078.xml 0079.xml 0080.xml 0081.xml 0082.xml \
0083.xml 0084.xml 0085.xml 0087.xml 0088.xml 0089.xml 0090.xml \
0091.xml 0093.xml 0099.xml 0104.xml 0106.xml 0107.xml 0108.xml \
0109.xml 0110.xml 0111.xml 0112.xml 0113.xml 0114.xml 0115.xml \
0117.xml 0118.xml 0119.xml 0120.xml 0121.xml 0122.xml 0126.xml \
0131.xml 0134.xml 0140.xml 0147.xml 0172.xml 0173.xml 0174.xml \
0181.xml 0197.xml 0201.xml 0202.xml 0203.xml 0207.xml 0209.xml \
0210.xml 0211.xml 0212.xml 0215.xml 0258.xml 0262.xml 0291.xml \
0294.xml 0304.xml

TEST_OUT_FILES = \
0001.out 0006.out 0007.out 0008.out 0009.out 0010.out 0012.out \
0013.out 0014.out 0015.out 0017.out 0018.out 0019.out 0020.out \
0021.out 0023.out 0025.out 0026.out 0027.out 0029.out 0030.out \
0031.out 0032.out 0033.out 0034.out 0035.out 0036.out 0037.out \
0038.out 0039.out 0040.out 0041.out 0042.out 0046.out 0047.out \
0048.out 0049.out 0050.out 0051.out 0052.out 0053.out 0054.out \
0055.out 0056.out 0057.out 0058.out 0059.out 0060.out 0061.out \
0062.out 0063.out 0064.out 0065.out 0066.out 0067.out 0068.out \
0069.out 0070.out 0071.out 0072.out 0073.out 0074.out 0075.out \
0076.out 0077.out 0078.out 0079.out 0080.out 0081.out 0082.out \
0083.out 0084.out 0085.out 0087.out 0088.out 0089.out 0090.out \
0091.out 0093.out 0099.out 0104.out 0106.out 0107.out 0108.out \
0109.out 0110.out 0111.out 0112.out 0113.out 0114.out 0115.out \
0117.out 0118.out 0119.out 0120.out 0121.out 0122.out 0126.out \
0131.out 0134.out 0140.out 0147.out 0172.out 0173.out 0174.out \
0181.out 0197.out 0201.out 0202.out 0203.out 0207.out 0209.out \
0210.out 0211.out 0212.out 0215.out 0258.out 0262.out 0291.out \
0294.out 0304.out

ALL_TEST_FILES = \
	$(TEST_FILES) \
	$(TEST_OUT_FILES)


# Expected test failures:
#  0202.xml - @xml:base support in SVG
#  0203.xml - @xml:base in non-root in SVG
#  0304.xml - embedded rdf/xml in SVG
# (Add a space to the start of this string)
EXPECTED_FAILURES = " 0202.xml 0203.xml"
EXTRA_DIST = $(ALL_TEST_FILES)
RAPPER = $(top_builddir)/utils/rapper
RDFDIFF = $(top_builddir)/utils/rdfdiff
#check_rdfa_deps = $(TEST_FILES)
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/rdfa/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/rdfa/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: all all-am check check-am check-local clean clean-generic \
	clean-libtool distclean distclean-generic distclean-libtool \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	uninstall uninstall-am


build-rapper:
	@(cd $(top_builddir)/utils ; $(MAKE) rapper$(EXEEXT))

build-rdfdiff:
	@(cd $(top_builddir)/utils ; $(MAKE) rdfdiff$(EXEEXT))

check-local: check-rdfa
#check-local:

check-rdfa: build-rdfdiff build-rapper $(check_rdfa_deps)
	@set +e; result=0; failures=; failure_count=0; \
	$(RECHO) "Testing RDFa 1.0"; \
	for test in $(TEST_FILES); do \
	  name=`basename $$test .xml` ; \
	  $(RECHO) $(RECHO_N) "Checking $$test $(RECHO_C)"; \
	  baseuri=$(BASE_URI)$$test; \
	  $(RAPPER) -f noNet -q -i rdfa10 -I $$baseuri -o ntriples $(srcdir)/$$test > $$name-res.nt 2> $$name.err; \
	  status1=$$?; \
	  if test $$status1 = 2; then \
	    status1=0; \
	  fi; \
	  $(RDFDIFF) -f ntriples -u $$baseuri -t ntriples $(srcdir)/$$name.out $$name-res.nt > $$name.res 2> $$name.err; \
	  status2=$$?; \
	  if test $$status1 = 0 -a $$status2 = 0; then \
	    $(RECHO) "ok"; \
	  else \
	    $(RECHO) "FAILED"; \
	    $(RECHO) "Triple counts: expected: `wc -l < $(srcdir)/$$name.out` got: `wc -l < $$name-res.nt` "; \
	    $(RECHO) $(RAPPER) -f noNet -q -i rdfa10 -I $$baseuri -o ntriples $(srcdir)/$$test '>' $$name-res.nt; \
	    $(RECHO) $(RDFDIFF) -f ntriples -u $$baseuri -t ntriples $(srcdir)/$$name.out $$name-res.nt '>' $$name.res; \
	    cat $$name.err $$name.res; \
	    failures="$$failures $$test"; \
	    failure_count=`expr $$failure_count + 1`; \
	  fi; \
	  rm -f $$name-res.nt $$name.res $$name.err; \
	done; \
	if test "X$$failures" != X; then \
	  echo "$$failure_count tests FAILED: $$failures"; \
	  if test "$$failures" = $(EXPECTED_FAILURES); then \
	    echo "Ignoring expected failures"; \
	    result=0; \
	  fi; \
	fi; \
	set -e; exit $$result

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
