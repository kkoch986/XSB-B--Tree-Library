%  Interface to Wordnet in Prolog: synonyms,ordered by estimated frequency, hypernyms (Input is a kind of Output), hyponyms (Output is a kind of Input), holonyms (Input is a part of Output) regular and inherited, meronyms (Output is a part of Input) regular and inherited, related forms, troponyms for verbs (Input is a part of Output)  regular and inherited, sentence frames lexical chains
:- import load_dync/2 from consult.
:-index(ant/4,[1,3]).
:-index(ent/2,[1,2]).
:-index(hyp/2,[1,2]).
:-index(mm/2,[1,2]).
:-index(sim/2,[1,2]).

testSameSynset:-
  walltime(LoadT0),
  load_dync('wn_s.pl',a),
  walltime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  walltime(T0),
  allSameSynset(_Word1,_Word2),
  walltime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allSameSynset\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
sameSynsets(Word1,Word2):-
  s(Synset_id,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  s(Synset_id,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  % Word1 \= Word2,
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allSameSynset(Word1,Word2):-
  sameSynsets(Word1,Word2),
  fail.
allSameSynset(_Word1,_Word2).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllGlosses:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_g.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allGlosses(_Word1,_Gloss),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allGlosses\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
gloss(Word1,Gloss):-
  s(Synset_id,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  g(Synset_id,Gloss).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allGlosses(Word1,Gloss):-
  gloss(Word1,Gloss),
  fail.
allGlosses(_Word1,_Gloss).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllDirectHypernyms:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_hyp.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allDirectHypernyms(_Word1,_DirectHypernym),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allDirectHypernyms\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
directHypernym(Word1,Word2):-
  s(Synset_id1,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  hyp(Synset_id1,Synset_id2),
  s(Synset_id2,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allDirectHypernyms(Word1,DirectHypernym):-
  directHypernym(Word1,DirectHypernym),
  fail.
allDirectHypernyms(_Word1,_DirectHypernym).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllHypernyms:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_hyp.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allHypernyms(_Word1,_Hypernym),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allHypernyms\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
%:- table hypernymSynsets/2 as subsumptive.
:- table hypernymSynsets/2.
hypernymSynsets(S1,S2):-
  hyp(S1,S2). % direct hypernym sets
hypernymSynsets(S1,S2):-
  hyp(S1,S3),
  hypernymSynsets(S3,S2). % multiple-levels hypernym sets
hypernym(Word1,Word2):-
  s(Synset_id1,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  hypernymSynsets(Synset_id1,Synset_id2),
  s(Synset_id2,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allHypernyms(Word1,Hypernym):-
  hypernym(Word1,Hypernym),
  fail.
allHypernyms(_Word1,_Hypernym).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllDirectHyponyms:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_hyp.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allDirectHyponyms(_Word1,_DirectHyponym),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allDirectHyponyms\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
directHyponym(Word1,Word2):-
  s(Synset_id1,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  hyp(Synset_id2,Synset_id1),
  s(Synset_id2,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allDirectHyponyms(Word1,DirectHyponym):-
  directHyponym(Word1,DirectHyponym),
  fail.
allDirectHyponyms(_Word1,_DirectHyponym).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllHyponyms:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_hyp.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allHyponyms(_Word1,_Hyponym),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allHyponyms\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
%:- table hyponymSynsets/2 as subsumptive.
:- table hyponymSynsets/2.
hyponymSynsets(S2,S1):-
  hyp(S2,S1). % direct hyponym sets
hyponymSynsets(S2,S1):-
  hyp(S3,S1),
  hyponymSynsets(S2,S3). % multiple-levels hyponym sets
hyponym(Word1,Word2):-
  s(Synset_id1,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  hyponymSynsets(Synset_id2,Synset_id1),
  s(Synset_id2,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allHyponyms(Word1,Hyponym):-
  hyponym(Word1,Hyponym),
  fail.
allHyponyms(_Word1,_Hyponym).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllDirectMeronyms:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_mm.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allDirectMeronyms(_Word1,_DirectMeronym),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allDirectMeronyms\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
directMeronym(Word1,Word2):-
  s(Synset_id1,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  mm(Synset_id2,Synset_id1),
  s(Synset_id2,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allDirectMeronyms(Word1,DirectMeronym):-
  directMeronym(Word1,DirectMeronym),
  fail.
allDirectMeronyms(_Word1,_DirectMeronym).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllMeronyms:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_mm.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allMeronyms(_Word1,_Meronym),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allMeronyms\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
%:- table meronymSynsets/2 as subsumptive.
:- table meronymSynsets/2.
meronymSynsets(S2,S1):-
  mm(S2,S1). % direct meronym sets
meronymSynsets(S2,S1):-
  mm(S3,S1),
  meronymSynsets(S2,S3). % multiple-levels meronym sets
meronym(Word1,Word2):-
  s(Synset_id1,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  meronymSynsets(Synset_id2,Synset_id1),
  s(Synset_id2,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allMeronyms(Word1,Meronym):-
  meronym(Word1,Meronym),
  fail.
allMeronyms(_Word1,_Meronym).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllDirectHolonyms:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_mm.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allDirectHolonyms(_Word1,_DirectHolonym),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allDirectHolonyms\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
directHolonym(Word1,Word2):-
  s(Synset_id1,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  mm(Synset_id1,Synset_id2),
  s(Synset_id2,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allDirectHolonyms(Word1,DirectHolonym):-
  directHolonym(Word1,DirectHolonym),
  fail.
allDirectHolonyms(_Word1,_DirectHolonym).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllHolonyms:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_mm.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allHolonyms(_Word1,_Holonym),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allHolonyms\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
%:- table holonymSynsets/2 as subsumptive.
:- table holonymSynsets/2.
holonymSynsets(S1,S2):-
  mm(S1,S2). % direct holonym sets
holonymSynsets(S1,S2):-
  mm(S1,S3),
  holonymSynsets(S3,S2). % multiple-levels holonym sets
holonym(Word1,Word2):-
  s(Synset_id1,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  holonymSynsets(Synset_id1,Synset_id2),
  s(Synset_id2,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allHolonyms(Word1,Holonym):-
  holonym(Word1,Holonym),
  fail.
allHolonyms(_Word1,_Holonym).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllDirectTroponyms:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_ent.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allDirectTroponyms(_Word1,_DirectTroponym),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allDirectTroponyms\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
directTroponym(Word1,Word2):-
  s(Synset_id1,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  ent(Synset_id1,Synset_id2),
  s(Synset_id2,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allDirectTroponyms(Word1,DirectTroponym):-
  directTroponym(Word1,DirectTroponym),
  fail.
allDirectTroponyms(_Word1,_DirectTroponym).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllTroponyms:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_ent.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allTroponyms(_Word1,_Troponym),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allTroponyms\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
%:- table troponymSynsets/2 as subsumptive.
:- table troponymSynsets/2.
troponymSynsets(S1,S2):-
  ent(S1,S2). % direct troponym sets
troponymSynsets(S1,S2):-
  ent(S1,S3),
  troponymSynsets(S3,S2). % multiple-levels troponym sets
troponym(Word1,Word2):-
  s(Synset_id1,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  troponymSynsets(Synset_id1,Synset_id2),
  s(Synset_id2,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allTroponyms(Word1,Troponym):-
  troponym(Word1,Troponym),
  fail.
allTroponyms(_Word1,_Troponym).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllDirectAdjectiveClusters:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_sim.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allDirectAdjectiveClusters(_Word1,_DirectAdjectiveClusters),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allDirectAdjectiveClusters\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
directAdjectiveClusters(Word1,Word2):-
  s(Synset_id1,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  sim(Synset_id1,Synset_id2),
  s(Synset_id2,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allDirectAdjectiveClusters(Word1,DirectAdjectiveClusters):-
  directAdjectiveClusters(Word1,DirectAdjectiveClusters),
  fail.
allDirectAdjectiveClusters(_Word1,_DirectAdjectiveClusters).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllAdjectiveClusters:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_sim.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allAdjectiveClusters(_Word1,_AdjectiveClusters),
  cputime(T1),
  T is T1 - T0,
  %getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allAdjectiveClusters\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
%:- table adjectiveClusterSynsets/2 as subsumptive.
:- table adjectiveClusterSynsets/2.
adjectiveClusterSynsets(S1,S2):-
  sim(S1,S2). % direct adjectiveCluster sets
adjectiveClusterSynsets(S1,S2):-
  sim(S1,S3),
  adjectiveClusterSynsets(S3,S2). % multiple-levels adjectiveCluster sets
adjectiveClusters(Word1,Word2):-
  s(Synset_id1,_W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  adjectiveClusterSynsets(Synset_id1,Synset_id2),
  s(Synset_id2,_W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allAdjectiveClusters(Word1,AdjectiveClusters):-
  adjectiveClusters(Word1,AdjectiveClusters),
  fail.
allAdjectiveClusters(_Word1,_AdjectiveClusters).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
testAllAntonyms:-
  cputime(LoadT0),
  load_dync('wn_s.pl',a), load_dync('wn_ant.pl',a),
  cputime(LoadT1),
  LoadT is LoadT1 - LoadT0,
  %initCounter,
  cputime(T0),
  allAntonyms(_Word1,_Antonym),
  cputime(T1),
  T is T1 - T0,
  %%getCounter(Counter),write('number solutions = '),write(Counter),nl,
  write('allAntonyms\nloading time:\n'),write(LoadT),nl,write('computing time:\n'),write(T),nl.
antonym(Word1,Word2):-
  s(Synset_id1,W_num1,Word1,_Ss_type1,_Sense_number1,_Tag_count1),
  ant(Synset_id1,W_num1,Synset_id2,W_num2),
  s(Synset_id2,W_num2,Word2,_Ss_type2,_Sense_number2,_Tag_count2).
  %%incrementCounter,
  %write(Word1),write(':'),write(Word2),nl.
allAntonyms(Word1,Antonym):-
  antonym(Word1,Antonym),
  fail.
allAntonyms(_Word1,_Antonym).